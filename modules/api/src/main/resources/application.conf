spark-on {
  cassandraCQLPath = "/data/spark_on_spark.cql"
  windowSizeSeconds = 5
  filters = [
    "scala",
    "akka",
    "spray",
    "play2",
    "playframework",
    "spark",
    "java",
    "python",
    "cassandra",
    "bigdata",
    "47 Degrees",
    "47Degrees",
    "47Deg",
    "programming",
    "lambda",
    "chicharrones",
    "cat",
    "dog"]
  spark.jars = ["./modules/api/target/scala-2.11/sparkOn-1.0.0.jar"]
  spark.jars = [${?SPARK_APP_JARS}]
  dateFormat: "yyyy_MM_dd_HH_mm"
  dateFormatSplitter: "_"
}

twitter {
  credentials {
    consumerKey = ""
    consumerKey = ${?CONSUMER_KEY}
    consumerSecret = ""
    consumerSecret = ${?CONSUMER_SECRET}
    accessToken = ""
    accessToken = ${?ACCESS_TOKEN}
    accessTokenSecret = ""
    accessTokenSecret = ${?ACCESS_TOKEN_SECRET}
  }
}

spark {
  master = "local[*]"
  master = ${?SPARK_MASTER_PORT_7077_TCP_ADDR}
  port = 7077
  port = ${?SPARK_MASTER_ENV_SPARK_MASTER_PORT}
  home = "/usr/local/spark"
  home = ${?SPARK_HOME}
  appName = "Spark On"
  checkpoint = "./checkpoint"
  checkpoint = ${?SPARK_CHECKPOINT}

  streaming.batch.interval = 5

  executor.memory = 2g
  cores.max = 2
  akka.heartbeat.interval = 100
  serializer = "org.apache.spark.serializer.KryoSerializer"

  cassandra {
    connection.host = [192.168.99.100]
    # Development:
    # connection.host = ${?CASSANDRA_HOSTS}
    # Production:
    connection.host = [${?CASSANDRA_HOSTS}]
    keyspace = "spark_on_topics"
  }
}

http {
  interface = "0.0.0.0"
  interface = ${?HTTP_INTERFACE}
  port = 8080
  port = ${?HTTP_PORT}
}

kafka {
  hosts = ["192.168.99.100:9092"]
  # Development:
  # hosts = ${?KAFKA_HOSTS}
  # Production:
  hosts = [${?KAFKA_HOSTS}]
  topics = "sparkOn.raw"
  topics = ${?KAFKA_TOPIC}

  zookeeper {
    host = "192.168.99.100"
    host = ${?ZOOKEEPER_PORT_2181_TCP_ADDR}
    port = 2181
    port = ${?ZOOKEEPER_ENV_ZOOKEEPER_PORT}
  }

  group.id = "sparkOn.group"
  topic.raw = "sparkOn.raw"

  producer {
    value.serializer = "org.apache.kafka.common.serialization.StringSerializer"
    key.serializer = "org.apache.kafka.common.serialization.StringSerializer"
  }
}
